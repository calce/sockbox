// Generated by CoffeeScript 1.6.3
var EventEmitter, io, merge, plugin, should, socket;

should = require('should');

EventEmitter = require('events').EventEmitter;

merge = function(a, b) {
  var key;
  if (a && b) {
    for (key in b) {
      a[key] = b[key];
    }
  }
  return a;
};

socket = merge({}, EventEmitter.prototype);

io = {
  connect: function() {
    return socket;
  }
};

plugin = {
  onConnect: function(socket) {
    console.log('wtf');
    return it('should exist', function(done) {
      should.exist(socket);
      return done();
    });
  },
  onDisconnect: function(socket) {
    return it('should exist', function(done) {
      should.exist(socket);
      return done();
    });
  },
  onCommand: function(data, socket) {
    return it('should be "1"', function(done) {
      data.should.equal("1");
      return done();
    });
  }
};

describe('engine', function() {
  var engine;
  engine = require('../engine');
  engine.init(io);
  engine.use('omg', plugin);
  console.log(socket);
  return engine.socket.emit('connect', socket);
});
